plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
}

android {
    namespace 'alex.zhurkov.intechsystems_shop'
    compileSdk 33

    defaultConfig {
        applicationId "alex.zhurkov.intechsystems_shop"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {

        def authKey = "TODO: insert yours"
        def pageSize = "20"
        def callTimeOutSec = "5"
        def cacheStaleSec = "86400" // 60 * 60 * 24, 1 day
        def cacheSizeByte = "5242880" // 5 * 1024 * 1024, 5MB

        debug {
            buildConfigField "int", "PAGE_SIZE", pageSize
            buildConfigField "long", "CALL_TIME_OUT_SEC", callTimeOutSec
            buildConfigField "long", "CACHE_STALE_SEC", cacheStaleSec
            buildConfigField "long", "CACHE_SIZE_BYTE", cacheSizeByte
            buildConfigField "String", "AUTH_KEY", "\"$authKey\""
        }
        release {
            buildConfigField "int", "PAGE_SIZE", pageSize
            buildConfigField "long", "CALL_TIME_OUT_SEC", callTimeOutSec
            buildConfigField "long", "CACHE_STALE_SEC", cacheStaleSec
            buildConfigField "long", "CACHE_SIZE_BYTE", cacheSizeByte
            buildConfigField "String", "AUTH_KEY", "\"$authKey\""
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.2'
    }
}

dependencies {
    def coreCtxVersion = "1.9.0"
    def materialVersion = "1.3.1"
    def material3Version = "1.0.1"
    def lifeCycleVersion = "2.5.1"
    def activityComposeVersion = "1.6.1"
    def daggerVersion = "2.44.2"
    def timberVersion = "4.7.1"
    def retrofitVersion = "2.9.0"
    def interceptorVersion = "4.9.1"
    def coilVersion = "2.1.0"
    def shimmerVersion = "1.0.3"
    def jodaTimeVersion = "2.12.2"
    def roomVersion = "2.5.0"

    //Test
    def junitVersion = "4.13.2"
    def kotlinReflectVersion = "1.7.20"
    def coreTestingVersion = "2.1.0"
    def mockitoInlineVersion = "3.8.0"
    def mockitoKotlinVersion = "4.1.0"
    def coroutineVersion = "1.6.2"
    def mockkVersion = "1.12.3"

    implementation "androidx.core:core-ktx:$coreCtxVersion"
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$materialVersion"
    implementation "androidx.compose.material3:material3:$material3Version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifeCycleVersion"
    implementation "androidx.activity:activity-compose:$activityComposeVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifeCycleVersion"
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"

    // DI
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    // Logging
    implementation "com.jakewharton.timber:timber:$timberVersion"

    // Network
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$interceptorVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    // Image loading
    implementation "io.coil-kt:coil-compose:$coilVersion"

    // Shimmer
    implementation "com.valentinilk.shimmer:compose-shimmer:$shimmerVersion"

    // Work with dates
    implementation "joda-time:joda-time:$jodaTimeVersion"

    // Room database
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"

    // Tests
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinReflectVersion"
    testImplementation "org.mockito:mockito-inline:$mockitoInlineVersion"
    testImplementation "androidx.arch.core:core-testing:$coreTestingVersion"
    testImplementation "org.mockito.kotlin:mockito-kotlin:$mockitoKotlinVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutineVersion"
    testImplementation "io.mockk:mockk:$mockkVersion"
    // Test rules and transitive dependencies:
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
}